// Auto Generated

/*
 * --------------------------------------------------------------------------------
 * Part 0: General Info Declaration
 * --------------------------------------------------------------------------------
 */

buildscript {
    repositories {
        jcenter() // Bintray's repository - a fast Maven Central mirror & more
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:+'
    }
}

plugins {
    // 3rd-parties
    id 'org.jetbrains.kotlin.jvm' version '1.2.71'
    id 'com.github.johnrengelman.shadow' version '2.0.4'
}

group = 'hackathon'
version = '0.0.1'

apply plugin: 'com.google.cloud.tools.appengine'

/*
 * --------------------------------------------------------------------------------
 * Part 1: Common Declaration for all Projects
 * --------------------------------------------------------------------------------
 */

allprojects {
    apply plugin: 'java-library'
    apply plugin: 'kotlin'

    repositories {
        jcenter()
        mavenCentral()
        maven {
            url 'https://jitpack.io'
        }
        maven {
            url 'https://dl.bintray.com/kotlin/kotlin-eap'
        }
    }

    configurations {
        // Suppress Old Guava
        all*.exclude group: 'com.google.guava', module:'guava-jdk5'
    }

    dependencies {
        // Kotlin
        implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.2.71'
        // Test
        testImplementation 'junit:junit:4.12'
        // Spark
        implementation 'com.sparkjava:spark-core:2.8.0'
        implementation 'com.sparkjava:spark-kotlin:1.0.0-alpha'
        // Firebase
        implementation 'com.google.firebase:firebase-admin:6.5.0'
        // Spark Pac4j
        api 'org.pac4j:spark-pac4j:2.2.0'
        api 'org.pac4j:pac4j-http:2.2.1'
        // GSON
        api 'com.google.code.gson:gson:2.8.5'
        // Database
        api 'com.github.SamChou19815:typed-store:0.8.2'
        // Logging
        implementation 'org.slf4j:slf4j-api:1.7.25'
        implementation 'org.slf4j:jcl-over-slf4j:1.7.25'
        implementation 'org.slf4j:slf4j-log4j12:1.7.25'
        implementation 'log4j:log4j:1.2.17'
    }

    compileKotlin {
        kotlinOptions {
            jvmTarget = '1.8'
            freeCompilerArgs = ['-Xjvm-default=enable']
        }
    }

    compileTestKotlin {
        kotlinOptions {
            jvmTarget = '1.8'
            freeCompilerArgs = ['-Xjvm-default=enable']
        }
    }
}

subprojects {
    apply plugin: 'com.github.johnrengelman.shadow'
    shadowJar {
        classifier = null
    }
}

/*
 * --------------------------------------------------------------------------------
 * Part 2: Dependencies for Main
 * --------------------------------------------------------------------------------
 */

dependencies {
    // Spark
    implementation 'com.sparkjava:spark-core:2.8.0'
    implementation 'com.sparkjava:spark-kotlin:1.0.0-alpha'
    // Add your dependencies here
    // Google NLP
    api 'com.google.cloud:google-cloud-language:1.49.0'
    // Cornell API Client Library
    api 'com.github.SamChou19815:cornell-api-libs:0.3.2'
}

/*
 * --------------------------------------------------------------------------------
 * Part 3: Config for Building JVM Project
 * --------------------------------------------------------------------------------
 */

shadowJar {
    baseName = 'website'
    version = 0.1
    manifest {
        attributes 'Main-Class': 'WebApp'
    }
    zip64 true
    artifacts {
        shadow(tasks.shadowJar.archivePath) {
            builtBy shadowJar
        }
    }
}

test {
    testLogging {
        showStandardStreams = true
        events = ['passed', 'skipped', 'failed']
    }
}

project.tasks.assemble.dependsOn(shadowJar)

/*
 * --------------------------------------------------------------------------------
 * Part 4: Tasks to Build and Deploy Other Parts
 * --------------------------------------------------------------------------------
 */


task updateDatastoreIndices {
    String indexFile = '~/.config/gcloud/emulators/datastore/WEB-INF/index.yaml'
    doLast {
        exec {
            commandLine 'sh', '-c', "gcloud datastore create-indexes $indexFile"
        }
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

appengine {

    stage {
        artifact = "build/libs/website-0.1-all.jar"
    }

    deploy {
        projectId = 'brh-fa18'
        stopPreviousVersion = true
        promote = true
        version = 4
    }

}
